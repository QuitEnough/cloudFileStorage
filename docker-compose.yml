services:

  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    restart: no
    ports:
      - 8081:8081
    environment:
      HOST_DB: db
      PORT_DB: 5432
      NAME_DB: ${NAME_DB}
      USER_DB: ${USER_DB}
      PASSWORD_DB: ${PASSWORD_DB}
      TOKEN_SIGNING_KEY: ${TOKEN_SIGNING_KEY}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      MINIO_URL: ${MINIO_URL}
      MINIO_PORT: ${MINIO_PORT}
    depends_on:
      - db

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    command: server --console-address ":9001" /data/
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      MINIO_URL: ${MINIO_URL}
      MINIO_PORT: ${MINIO_PORT}
    volumes:
      - minio-storage:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  db:
    image: postgres
    container_name: db
    restart: always
    ports:
      - 8888:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${USER_DB}
      POSTGRES_PASSWORD: ${PASSWORD_DB}
      POSTGRES_DB: ${NAME_DB}

  odfe-node:
    image: elasticsearch:7.10.1
    logging:
      driver: "json-file"
      options:
        max-size: "1000m"
        max-file: "10"
    container_name: odfe-node
    environment:
      - discovery.type=single-node
      - node.name=odfe-node
      - discovery.seed_hosts=odfe-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms4096m -Xmx4096m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ./elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9600:9600"
    networks:
      - odfe-net

  kibana:
    image: kibana:7.10.1
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    container_name: odfe-kibana
    ports:
      - "5601:5601"
    expose:
      - "5601"
    environment:
      ELASTICSEARCH_URL: http://odfe-node:9200
      ELASTICSEARCH_HOSTS: http://odfe-node:9200
    networks:
      - odfe-net

  logstash:
    user: root
    image: docker.elastic.co/logstash/logstash-oss:7.9.1
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    ports:
      - "5044:5044"
    depends_on:
      - db
      - odfe-node
    environment:
      - PIPELINE_WORKERS=1
      - PIPELINE_BATCH_SIZE=125
      - PIPELINE_BATCH_DELAY=50
    volumes:
      - ./conf/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logstash_data:/usr/share/logstash/data
      - ./conf/postgresql-42.6.0.jar:/usr/share/logstash/postgresql-42.6.0.jar
    networks:
      - odfe-net

networks:
  app_network:
    driver: bridge
  odfe-net:
volumes:
  postgres_data:
  minio-storage:
  odfe-net:
  logstash:





