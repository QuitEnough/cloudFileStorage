services:

  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    restart: no
    ports:
      - 8081:8081
    environment:
      HOST_DB: db
      PORT_DB: 5432
      NAME_DB: ${NAME_DB}
      USER_DB: ${USER_DB}
      PASSWORD_DB: ${PASSWORD_DB}
      TOKEN_SIGNING_KEY: ${TOKEN_SIGNING_KEY}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      MINIO_URL: ${MINIO_URL}
      MINIO_PORT: ${MINIO_PORT}
    depends_on:
      - db

  db:
    image: postgres
    container_name: db
    restart: always
    ports:
      - 8888:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${USER_DB}
      POSTGRES_PASSWORD: ${PASSWORD_DB}
      POSTGRES_DB: ${NAME_DB}

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    command: server --console-address ":9001" /data/
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      MINIO_URL: ${MINIO_URL}
      MINIO_PORT: ${MINIO_PORT}
    volumes:
      - minio-storage:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

networks:
  app_network:
    driver: bridge
volumes:
  postgres_data:
  minio-storage:





